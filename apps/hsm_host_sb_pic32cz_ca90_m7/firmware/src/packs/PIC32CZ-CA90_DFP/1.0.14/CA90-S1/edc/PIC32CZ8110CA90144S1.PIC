<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<edc:PIC xmlns:atdf="http://crownking/atdf" xmlns:edc="http://crownking/edc" xmlns:ltx="http://crownking/ltx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://crownking/edc edc/PIC.xsd" edc:name="PIC32CZ8110CA90144S1" edc:arch="arm32bit" edc:procid="0x0000" atdf:architecture="CORTEX-M0PLUS" atdf:family="PIC32CZ" edc:isslaveof="PIC32CZ8110CA90144" edc:hasFreeze="false" edc:masksetid="SG003">
  <edc:Properties>
    <edc:Property edc:propkey="file.registers.are.odd.address.accessible" edc:propvalue="true"/>
  </edc:Properties>
  <edc:Power edc:sharespowersupply="true"/>
  <edc:Programming edc:haslvp2="true">
    <edc:ProgrammingRowSize edc:progop="rowerase" edc:nzsize="4096"/>
  </edc:Programming>
  <edc:ArchDef edc:name="arm32bit" edc:desc="arm32bit">
    <edc:MemTraits edc:addrinc="0x1" edc:locsize="0x1" edc:wordimpl="0xFFFFFFFF" edc:wordinit="0xFFFFFFFF" edc:wordsafe="0xFFFFFFFF" edc:wordsize="0x4"/>
  </edc:ArchDef>
  <edc:InstructionSet edc:instructionsetid="armv6m"/>
  <edc:InterruptList>
    <edc:Interrupt edc:irq="-15" edc:cname="Reset" edc:desc="Reset Vector, invoked on Power up and warm reset"/>
    <edc:Interrupt edc:irq="-14" edc:cname="NonMaskableInt" edc:desc="Non maskable Interrupt, cannot be stopped or preempted"/>
    <edc:Interrupt edc:irq="-13" edc:cname="HardFault" edc:desc="Hard Fault, all classes of Fault"/>
    <edc:Interrupt edc:irq="-5" edc:cname="SVCall" edc:desc="System Service Call via SVC instruction"/>
    <edc:Interrupt edc:irq="-2" edc:cname="PendSV" edc:desc="Pendable request for system service"/>
    <edc:Interrupt edc:irq="-1" edc:cname="SysTick" edc:desc="System Tick Timer"/>
    <edc:Interrupt edc:irq="0" edc:cname="CSM_COMMANDCANCEL" edc:desc="" ltx:memberofperipheral="CSM"/>
    <edc:Interrupt edc:irq="1" edc:cname="INTCTRL" edc:desc="" ltx:memberofperipheral="INTCTRL"/>
    <edc:Interrupt edc:irq="2" edc:cname="CSM_FCW" edc:desc="" ltx:memberofperipheral="CSM"/>
  </edc:InterruptList>
  <edc:PeripheralList>
    <edc:Peripheral edc:cname="AI" edc:desc=""/>
    <edc:Peripheral edc:cname="CSM" edc:desc=""/>
    <edc:Peripheral edc:cname="EXTDMA" edc:desc=""/>
    <edc:Peripheral edc:cname="INTCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="MAILBOX" edc:desc=""/>
    <edc:Peripheral edc:cname="MCRAMC" edc:desc=""/>
    <edc:Peripheral edc:cname="NVIC" edc:desc=""/>
    <edc:Peripheral edc:cname="PKRAM" edc:desc=""/>
    <edc:Peripheral edc:cname="RTC" edc:desc=""/>
    <edc:Peripheral edc:cname="SYSREGS" edc:desc=""/>
    <edc:Peripheral edc:cname="SysTick" edc:desc=""/>
    <edc:Peripheral edc:cname="SystemControl" edc:desc=""/>
    <edc:Peripheral edc:cname="TAMPER" edc:desc=""/>
    <edc:Peripheral edc:cname="TIMERS" edc:desc=""/>
    <edc:Peripheral edc:cname="WDT" edc:desc=""/>
  </edc:PeripheralList>
  <edc:PhysicalSpace>
    <edc:NMMRPlace edc:regionid="corenmmrs">
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R0" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="0"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R1" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="4"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R2" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="8"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R3" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="12"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R4" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="16"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R5" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="20"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R6" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="24"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R7" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="28"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R8" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="32"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R9" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="36"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R10" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="40"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R11" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="44"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R12" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="48"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="SP" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Stack Pointer" edc:nmmrid="52"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="MSP" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Main Stack Pointer" edc:nmmrid="64"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PSP" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Process Stack Pointer" edc:nmmrid="68"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="LR" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:desc="Link Register" edc:nmmrid="56"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PC" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Program Counter" edc:nmmrid="60"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PSR" edc:impl="0xF100003F" edc:access="nnnn---n------------------nnnnnn" edc:por="00000001000000000000000000000000" edc:mclr="00000001000000000000000000000000" edc:desc="Program Status Register" edc:nmmrid="72"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="APSR" edc:impl="0xF0000000" edc:access="nnnn----------------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Application Program Status Register" edc:nmmrid="76"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="IPSR" edc:impl="0x3F" edc:access="--------------------------rrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Interrupt Program Status Register" edc:nmmrid="80"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="EPSR" edc:impl="0x1000000" edc:access="-------r------------------------" edc:por="00000001000000000000000000000000" edc:mclr="00000001000000000000000000000000" edc:desc="Execution Program Status Register" edc:nmmrid="84"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PRIMASK" edc:impl="0x1" edc:access="-------------------------------n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Priority Mask Register" edc:nmmrid="88"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="CONTROL" edc:impl="0x3" edc:access="------------------------------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Control Register" edc:nmmrid="100"/>
    </edc:NMMRPlace>
    <edc:CodeSector edc:regionid="FCR_CFM_HSMCFG0" edc:beginaddr="0xA00C000" edc:endaddr="0xA00D000" atdf:pagesize="0x1000" edc:rw="rw"/>
    <edc:CodeSector edc:regionid="FCR_CFM_HSMCFG1" edc:beginaddr="0xA00D000" edc:endaddr="0xA00E000" atdf:pagesize="0x1000" edc:rw="rw"/>
    <edc:CodeSector edc:regionid="FCR_CFM_HSMCFG2" edc:beginaddr="0xA00E000" edc:endaddr="0xA00F000" atdf:pagesize="0x1000" edc:rw="rw"/>
    <edc:CodeSector edc:regionid="FCR_CFM_HSMCFG3" edc:beginaddr="0xA00F000" edc:endaddr="0xA010000" atdf:pagesize="0x1000" edc:rw="rw"/>
    <edc:GPRDataSector edc:regionid="RAM" edc:beginaddr="0x10000000" edc:endaddr="0x10020000" edc:isexecutable="true" edc:rw="rw"/>
    <edc:BootConfigSector edc:regionid="ROM" edc:beginaddr="0x20000000" edc:endaddr="0x20008000" edc:rw="r"/>
    <edc:SFRDataSector edc:regionid="APBA" edc:beginaddr="0x50000000" edc:endaddr="0x52001C10" edc:rw="rw">
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="FIFO0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x50000000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="Data" edc:nzwidth="0x20" edc:desc="Mailbox data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="FIFO1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x50000004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="Data" edc:nzwidth="0x20" edc:desc="Mailbox data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="FIFO2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x50000008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="Data" edc:nzwidth="0x20" edc:desc="Mailbox data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="FIFO3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x5000000C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="Data" edc:nzwidth="0x20" edc:desc="Mailbox data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="FIFO4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x50000010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="Data" edc:nzwidth="0x20" edc:desc="Mailbox data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="FIFO5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x50000014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="Data" edc:nzwidth="0x20" edc:desc="Mailbox data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="FIFO6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x50000018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="Data" edc:nzwidth="0x20" edc:desc="Mailbox data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="FIFO7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x5000001C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="Data" edc:nzwidth="0x20" edc:desc="Mailbox data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="FIFO8" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x50000020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="Data" edc:nzwidth="0x20" edc:desc="Mailbox data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="FIFO9" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x50000024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="Data" edc:nzwidth="0x20" edc:desc="Mailbox data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="FIFO10" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x50000028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="Data" edc:nzwidth="0x20" edc:desc="Mailbox data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="FIFO11" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x5000002C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="Data" edc:nzwidth="0x20" edc:desc="Mailbox data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="FIFO12" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x50000030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="Data" edc:nzwidth="0x20" edc:desc="Mailbox data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="FIFO13" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x50000034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="Data" edc:nzwidth="0x20" edc:desc="Mailbox data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="FIFO14" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x50000038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="Data" edc:nzwidth="0x20" edc:desc="Mailbox data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="FIFO15" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x5000003C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="Data" edc:nzwidth="0x20" edc:desc="Mailbox data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="TX_STATUS" edc:nzwidth="0x20" edc:access="--------r-rrrrrrrrrrrrrrrrrrrrrr" edc:impl="0xBFFFFF" edc:_addr="0x50000040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="TXREMAINING" edc:nzwidth="0x10" edc:desc="Transmit Bytes Remaining"/>
            <edc:SFRFieldDef edc:cname="TXTYPE" edc:nzwidth="0x4" edc:desc="Message Type"/>
            <edc:SFRFieldDef edc:cname="TXINT" edc:nzwidth="0x1" edc:desc="Transmit Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXFULL" edc:nzwidth="0x1" edc:desc="Transmit FIFO Full"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXERROR" edc:nzwidth="0x1" edc:desc="Transmit Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="RX_STATUS" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:impl="0xFFFFFF" edc:_addr="0x50000044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="RXREMAINING" edc:nzwidth="0x10" edc:desc="Receive Bytes Remaining"/>
            <edc:SFRFieldDef edc:cname="RXTYPE" edc:nzwidth="0x4" edc:desc="Receive Message Type"/>
            <edc:SFRFieldDef edc:cname="RXINT" edc:nzwidth="0x1" edc:desc="Receive Interrupt Occurred"/>
            <edc:SFRFieldDef edc:cname="RXEMPTY" edc:nzwidth="0x1" edc:desc="Receive FIFO Empty"/>
            <edc:SFRFieldDef edc:cname="RXHEADER" edc:nzwidth="0x1" edc:desc="Receive Header"/>
            <edc:SFRFieldDef edc:cname="RXERROR" edc:nzwidth="0x1" edc:desc="Receive Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="TX_PROT" edc:nzwidth="0x20" edc:access="rrrrrrrrrrr---------------------" edc:impl="0xFFE00000" edc:_addr="0x50000048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:AdjustPoint edc:offset="0x15"/>
            <edc:SFRFieldDef edc:cname="UNPROT" edc:nzwidth="0x1" edc:desc="Mailbox Message Unprotected"/>
            <edc:SFRFieldDef edc:cname="PRIV" edc:nzwidth="0x1" edc:desc="Mailbox message Privilaged"/>
            <edc:SFRFieldDef edc:cname="NSEC" edc:nzwidth="0x1" edc:desc="Mailbox Message Unsecured"/>
            <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="RX_PROT" edc:nzwidth="0x20" edc:access="rrrrrrrrrrr---------------------" edc:impl="0xFFE00000" edc:_addr="0x5000004C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:AdjustPoint edc:offset="0x15"/>
            <edc:SFRFieldDef edc:cname="UNPROTECT" edc:nzwidth="0x1" edc:desc="Mailbox Message Unprotected"/>
            <edc:SFRFieldDef edc:cname="PRIV" edc:nzwidth="0x1" edc:desc="Mailbox message Privilaged"/>
            <edc:SFRFieldDef edc:cname="NSEC" edc:nzwidth="0x1" edc:desc="Mailbox Message Unsecured"/>
            <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="TX_HEADER" edc:nzwidth="0x20" edc:access="wwwwwwwwwww-wwwwwwwwwwwwwwwwwwww" edc:impl="0xFFEFFFFF" edc:_addr="0x50000050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="MSGSIZE" edc:nzwidth="0x10" edc:desc="Message Size"/>
            <edc:SFRFieldDef edc:cname="MSGINFO" edc:nzwidth="0x4" edc:desc="Message Info"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="UNPROT" edc:nzwidth="0x1" edc:desc="Unprotected Access"/>
            <edc:SFRFieldDef edc:cname="PRIV" edc:nzwidth="0x1" edc:desc="Privilaged Access"/>
            <edc:SFRFieldDef edc:cname="NSEC" edc:nzwidth="0x1" edc:desc="Non Secure Access"/>
            <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User Bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="RX_HEADER" edc:nzwidth="0x20" edc:access="----------r-rrrrrrrrrrrrrrrrrrrr" edc:impl="0x2FFFFF" edc:_addr="0x50000054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="MSGSIZE" edc:nzwidth="0x10" edc:desc="Message Size"/>
            <edc:SFRFieldDef edc:cname="MSGINFO" edc:nzwidth="0x4" edc:desc="Message Information"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="UNPROT" edc:nzwidth="0x1" edc:desc="Unprotected Access"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MAILBOX" edc:cname="CONFIG" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x50000058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MAILBOX">
            <edc:SFRFieldDef edc:cname="TX_INT_ENABLE" edc:nzwidth="0x1" edc:desc="Transmit Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RX_INT_ENABLE" edc:nzwidth="0x1" edc:desc="Receive Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x20003A4" edc:_addr="0x5000005C"/>
      <edc:SFRDef ltx:memberofperipheral="INTCTRL" edc:cname="STATL" edc:nzwidth="0x20" edc:access="------------rrrrrr--r---rrr-rrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFC8EF" edc:_addr="0x52000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="INTCTRL">
            <edc:SFRFieldDef edc:cname="RTC" edc:nzwidth="0x1" edc:desc="RTC Interrupt"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Interrupt"/>
            <edc:SFRFieldDef edc:cname="EXTDMA" edc:nzwidth="0x1" edc:desc="External DMA Interrupt"/>
            <edc:SFRFieldDef edc:cname="WDOG" edc:nzwidth="0x1" edc:desc="Watch Dog Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TAMPER_BUSY" edc:nzwidth="0x1" edc:desc="Tamper Busy Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMER0" edc:nzwidth="0x1" edc:desc="Timer 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMER1" edc:nzwidth="0x1" edc:desc="Timer 1 interrupt"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PWRDOWN" edc:nzwidth="0x1" edc:desc="Power Down Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MB_TX" edc:nzwidth="0x1" edc:desc="Mailbox TX Interrupt"/>
            <edc:SFRFieldDef edc:cname="MB_RX" edc:nzwidth="0x1" edc:desc="Mailbox RX Interrupt"/>
            <edc:SFRFieldDef edc:cname="CRYPTO0" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 0"/>
            <edc:SFRFieldDef edc:cname="CRYPTO1" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 1"/>
            <edc:SFRFieldDef edc:cname="CRYPTO2" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 2"/>
            <edc:SFRFieldDef edc:cname="CRYPTO3" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x52000404"/>
      <edc:SFRDef ltx:memberofperipheral="INTCTRL" edc:cname="RSRL" edc:nzwidth="0x20" edc:access="------------nnnnnn--n---nnn-nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFC8EF" edc:_addr="0x52000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="INTCTRL">
            <edc:SFRFieldDef edc:cname="RTC" edc:nzwidth="0x1" edc:desc="RTC Interrupt"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Interrupt"/>
            <edc:SFRFieldDef edc:cname="EXTDMA" edc:nzwidth="0x1" edc:desc="External DMA Interrupt"/>
            <edc:SFRFieldDef edc:cname="WDOG" edc:nzwidth="0x1" edc:desc="Watch Dog Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TAMPER_BUSY" edc:nzwidth="0x1" edc:desc="Tamper Busy Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMER0" edc:nzwidth="0x1" edc:desc="Timer 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMER1" edc:nzwidth="0x1" edc:desc="Timer 1 interrupt"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PWRDOWN" edc:nzwidth="0x1" edc:desc="Power Down Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MB_TX" edc:nzwidth="0x1" edc:desc="Mailbox TX Interrupt"/>
            <edc:SFRFieldDef edc:cname="MB_RX" edc:nzwidth="0x1" edc:desc="Mailbox RX Interrupt"/>
            <edc:SFRFieldDef edc:cname="CRYPTO0" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 0"/>
            <edc:SFRFieldDef edc:cname="CRYPTO1" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 1"/>
            <edc:SFRFieldDef edc:cname="CRYPTO2" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 2"/>
            <edc:SFRFieldDef edc:cname="CRYPTO3" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x5200040C"/>
      <edc:SFRDef ltx:memberofperipheral="INTCTRL" edc:cname="ENAL" edc:nzwidth="0x20" edc:access="------------nnnnnn--n---nnn-nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFC8EF" edc:_addr="0x52000410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="INTCTRL">
            <edc:SFRFieldDef edc:cname="RTC" edc:nzwidth="0x1" edc:desc="RTC Interrupt"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Interrupt"/>
            <edc:SFRFieldDef edc:cname="EXTDMA" edc:nzwidth="0x1" edc:desc="External DMA Interrupt"/>
            <edc:SFRFieldDef edc:cname="WDOG" edc:nzwidth="0x1" edc:desc="Watch Dog Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TAMPER_BUSY" edc:nzwidth="0x1" edc:desc="Tamper Busy Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMER0" edc:nzwidth="0x1" edc:desc="Timer 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMER1" edc:nzwidth="0x1" edc:desc="Timer 1 interrupt"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PWRDOWN" edc:nzwidth="0x1" edc:desc="Power Down Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MB_TX" edc:nzwidth="0x1" edc:desc="Mailbox TX Interrupt"/>
            <edc:SFRFieldDef edc:cname="MB_RX" edc:nzwidth="0x1" edc:desc="Mailbox RX Interrupt"/>
            <edc:SFRFieldDef edc:cname="CRYPTO0" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 0"/>
            <edc:SFRFieldDef edc:cname="CRYPTO1" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 1"/>
            <edc:SFRFieldDef edc:cname="CRYPTO2" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 2"/>
            <edc:SFRFieldDef edc:cname="CRYPTO3" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x52000414"/>
      <edc:SFRDef ltx:memberofperipheral="INTCTRL" edc:cname="CLRL" edc:nzwidth="0x20" edc:access="------------wwwwww--w---www-wwww" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFC8EF" edc:_addr="0x52000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="INTCTRL">
            <edc:SFRFieldDef edc:cname="RTC" edc:nzwidth="0x1" edc:desc="RTC Interrupt"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Interrupt"/>
            <edc:SFRFieldDef edc:cname="EXTDMA" edc:nzwidth="0x1" edc:desc="External DMA Interrupt"/>
            <edc:SFRFieldDef edc:cname="WDOG" edc:nzwidth="0x1" edc:desc="Watch Dog Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TAMPER_BUSY" edc:nzwidth="0x1" edc:desc="Tamper Busy Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMER0" edc:nzwidth="0x1" edc:desc="Timer 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMER1" edc:nzwidth="0x1" edc:desc="Timer 1 interrupt"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PWRDOWN" edc:nzwidth="0x1" edc:desc="Power Down Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MB_TX" edc:nzwidth="0x1" edc:desc="Mailbox TX Interrupt"/>
            <edc:SFRFieldDef edc:cname="MB_RX" edc:nzwidth="0x1" edc:desc="Mailbox RX Interrupt"/>
            <edc:SFRFieldDef edc:cname="CRYPTO0" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 0"/>
            <edc:SFRFieldDef edc:cname="CRYPTO1" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 1"/>
            <edc:SFRFieldDef edc:cname="CRYPTO2" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 2"/>
            <edc:SFRFieldDef edc:cname="CRYPTO3" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x5200041C"/>
      <edc:SFRDef ltx:memberofperipheral="INTCTRL" edc:cname="TSTL" edc:nzwidth="0x20" edc:access="------------nnnnnn--n---nnn-nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFC8EF" edc:_addr="0x52000420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="INTCTRL">
            <edc:SFRFieldDef edc:cname="RTC" edc:nzwidth="0x1" edc:desc="RTC Interrupt"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Interrupt"/>
            <edc:SFRFieldDef edc:cname="EXTDMA" edc:nzwidth="0x1" edc:desc="External DMA Interrupt"/>
            <edc:SFRFieldDef edc:cname="WDOG" edc:nzwidth="0x1" edc:desc="Watch Dog Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TAMPER_BUSY" edc:nzwidth="0x1" edc:desc="Tamper Busy Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMER0" edc:nzwidth="0x1" edc:desc="Timer 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMER1" edc:nzwidth="0x1" edc:desc="Timer 1 interrupt"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PWRDOWN" edc:nzwidth="0x1" edc:desc="Power Down Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MB_TX" edc:nzwidth="0x1" edc:desc="Mailbox TX Interrupt"/>
            <edc:SFRFieldDef edc:cname="MB_RX" edc:nzwidth="0x1" edc:desc="Mailbox RX Interrupt"/>
            <edc:SFRFieldDef edc:cname="CRYPTO0" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 0"/>
            <edc:SFRFieldDef edc:cname="CRYPTO1" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 1"/>
            <edc:SFRFieldDef edc:cname="CRYPTO2" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 2"/>
            <edc:SFRFieldDef edc:cname="CRYPTO3" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x52000424"/>
      <edc:SFRDef ltx:memberofperipheral="INTCTRL" edc:cname="SELL" edc:nzwidth="0x20" edc:access="------------nnnnnn--n---nnn-nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFC8EF" edc:_addr="0x52000428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="INTCTRL">
            <edc:SFRFieldDef edc:cname="RTC" edc:nzwidth="0x1" edc:desc="RTC Interrupt"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Interrupt"/>
            <edc:SFRFieldDef edc:cname="EXTDMA" edc:nzwidth="0x1" edc:desc="External DMA Interrupt"/>
            <edc:SFRFieldDef edc:cname="WDOG" edc:nzwidth="0x1" edc:desc="Watch Dog Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TAMPER_BUSY" edc:nzwidth="0x1" edc:desc="Tamper Busy Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMER0" edc:nzwidth="0x1" edc:desc="Timer 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMER1" edc:nzwidth="0x1" edc:desc="Timer 1 interrupt"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PWRDOWN" edc:nzwidth="0x1" edc:desc="Power Down Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MB_TX" edc:nzwidth="0x1" edc:desc="Mailbox TX Interrupt"/>
            <edc:SFRFieldDef edc:cname="MB_RX" edc:nzwidth="0x1" edc:desc="Mailbox RX Interrupt"/>
            <edc:SFRFieldDef edc:cname="CRYPTO0" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 0"/>
            <edc:SFRFieldDef edc:cname="CRYPTO1" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 1"/>
            <edc:SFRFieldDef edc:cname="CRYPTO2" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 2"/>
            <edc:SFRFieldDef edc:cname="CRYPTO3" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x5200042C"/>
      <edc:SFRDef ltx:memberofperipheral="INTCTRL" edc:cname="APRL" edc:nzwidth="0x20" edc:access="-------------nnnnn--n---nnn-nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7C8EF" edc:_addr="0x52000430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="INTCTRL">
            <edc:SFRFieldDef edc:cname="RTC" edc:nzwidth="0x1" edc:desc="RTC Interrupt"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Interrupt"/>
            <edc:SFRFieldDef edc:cname="EXTDMA" edc:nzwidth="0x1" edc:desc="External DMA Interrupt"/>
            <edc:SFRFieldDef edc:cname="WDOG" edc:nzwidth="0x1" edc:desc="Watch Dog Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TAMPER_BUSY" edc:nzwidth="0x1" edc:desc="Tamper Busy Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMER0" edc:nzwidth="0x1" edc:desc="Timer 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMER1" edc:nzwidth="0x1" edc:desc="Timer 1 interrupt"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PWRDOWN" edc:nzwidth="0x1" edc:desc="Power Down Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MB_TX" edc:nzwidth="0x1" edc:desc="Mailbox TX Interrupt"/>
            <edc:SFRFieldDef edc:cname="MB_RX" edc:nzwidth="0x1" edc:desc="Mailbox RX Interrupt"/>
            <edc:SFRFieldDef edc:cname="CRYPTODMA" edc:nzwidth="0x1" edc:desc="Crypto DMA Interrupt"/>
            <edc:SFRFieldDef edc:cname="NDRNG" edc:nzwidth="0x1" edc:desc="RNG Interrupt"/>
            <edc:SFRFieldDef edc:cname="PKENGINE" edc:nzwidth="0x1" edc:desc="PK Engine Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x52000434"/>
      <edc:SFRDef ltx:memberofperipheral="INTCTRL" edc:cname="ATRL" edc:nzwidth="0x20" edc:access="------------nnnnnn--n---nnn-nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFC8EF" edc:_addr="0x52000438">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="INTCTRL">
            <edc:SFRFieldDef edc:cname="RTC" edc:nzwidth="0x1" edc:desc="RTC Interrupt"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Interrupt"/>
            <edc:SFRFieldDef edc:cname="EXTDMA" edc:nzwidth="0x1" edc:desc="External DMA Interrupt"/>
            <edc:SFRFieldDef edc:cname="WDOG" edc:nzwidth="0x1" edc:desc="Watch Dog Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TAMPER_BUSY" edc:nzwidth="0x1" edc:desc="Tamper Busy Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMER0" edc:nzwidth="0x1" edc:desc="Timer 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMER1" edc:nzwidth="0x1" edc:desc="Timer 1 interrupt"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PWRDOWN" edc:nzwidth="0x1" edc:desc="Power Down Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MB_TX" edc:nzwidth="0x1" edc:desc="Mailbox TX Interrupt"/>
            <edc:SFRFieldDef edc:cname="MB_RX" edc:nzwidth="0x1" edc:desc="Mailbox RX Interrupt"/>
            <edc:SFRFieldDef edc:cname="CRYPTO0" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 0"/>
            <edc:SFRFieldDef edc:cname="CRYPTO1" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 1"/>
            <edc:SFRFieldDef edc:cname="CRYPTO2" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 2"/>
            <edc:SFRFieldDef edc:cname="CRYPTO3" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x5200043C"/>
      <edc:SFRDef ltx:memberofperipheral="INTCTRL" edc:cname="ITRL" edc:nzwidth="0x20" edc:access="------------nnnnnn--n---nnn-nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFC8EF" edc:_addr="0x52000440">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="INTCTRL">
            <edc:SFRFieldDef edc:cname="RTC" edc:nzwidth="0x1" edc:desc="RTC Interrupt"/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Interrupt"/>
            <edc:SFRFieldDef edc:cname="EXTDMA" edc:nzwidth="0x1" edc:desc="External DMA Interrupt"/>
            <edc:SFRFieldDef edc:cname="WDOG" edc:nzwidth="0x1" edc:desc="Watch Dog Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TAMPER_BUSY" edc:nzwidth="0x1" edc:desc="Tamper Busy Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMER0" edc:nzwidth="0x1" edc:desc="Timer 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="TIMER1" edc:nzwidth="0x1" edc:desc="Timer 1 interrupt"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PWRDOWN" edc:nzwidth="0x1" edc:desc="Power Down Interrupt"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MB_TX" edc:nzwidth="0x1" edc:desc="Mailbox TX Interrupt"/>
            <edc:SFRFieldDef edc:cname="MB_RX" edc:nzwidth="0x1" edc:desc="Mailbox RX Interrupt"/>
            <edc:SFRFieldDef edc:cname="CRYPTO0" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 0"/>
            <edc:SFRFieldDef edc:cname="CRYPTO1" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 1"/>
            <edc:SFRFieldDef edc:cname="CRYPTO2" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 2"/>
            <edc:SFRFieldDef edc:cname="CRYPTO3" edc:nzwidth="0x1" edc:desc="Crypto Interrupt 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x52000444"/>
      <edc:SFRDef ltx:memberofperipheral="INTCTRL" edc:cname="PIN" edc:nzwidth="0x20" edc:access="--------------------------rrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x52000448">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="INTCTRL">
            <edc:SFRFieldDef edc:cname="PIN" edc:nzwidth="0x6" edc:desc="Pending IRQ Num"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3B4" edc:_addr="0x5200044C"/>
      <edc:SFRDef ltx:memberofperipheral="EXTDMA" edc:cname="FETCH_ADDR_LSB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x52000800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXTDMA">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x20" edc:desc="Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EXTDMA" edc:cname="FETCH_ADDR_MSB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x52000804"/>
      <edc:SFRDef ltx:memberofperipheral="EXTDMA" edc:cname="FETCH_LEN" edc:nzwidth="0x20" edc:access="--nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFFFFFF" edc:_addr="0x52000808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXTDMA">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x1C" edc:desc="Length of data block"/>
            <edc:SFRFieldDef edc:cname="CST_ADDR" edc:nzwidth="0x1" edc:desc="CST Address"/>
            <edc:SFRFieldDef edc:cname="REALIGN" edc:nzwidth="0x1" edc:desc="Realign"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EXTDMA" edc:cname="FETCH_TAG" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x5200080C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXTDMA">
            <edc:SFRFieldDef edc:cname="TAG" edc:nzwidth="0x20" edc:desc="User TAG"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EXTDMA" edc:cname="PUSH_ADDR_LSB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x52000810">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXTDMA">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x20" edc:desc="Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EXTDMA" edc:cname="PUSH_ADDR_MSB" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x52000814"/>
      <edc:SFRDef ltx:memberofperipheral="EXTDMA" edc:cname="PUSH_LEN" edc:nzwidth="0x20" edc:access="--nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFFFFFF" edc:_addr="0x52000818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXTDMA">
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x1C" edc:desc="Length of data block"/>
            <edc:SFRFieldDef edc:cname="CST_ADDR" edc:nzwidth="0x1" edc:desc="CST Address"/>
            <edc:SFRFieldDef edc:cname="REALIGN" edc:nzwidth="0x1" edc:desc="Realign"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EXTDMA" edc:cname="INT_EN" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x5200081C"/>
      <edc:SFRDef ltx:memberofperipheral="EXTDMA" edc:cname="INT_ENSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x52000820"/>
      <edc:SFRDef ltx:memberofperipheral="EXTDMA" edc:cname="INT_ENCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x52000824"/>
      <edc:SFRDef ltx:memberofperipheral="EXTDMA" edc:cname="INT_STATRAW" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x52000828"/>
      <edc:SFRDef ltx:memberofperipheral="EXTDMA" edc:cname="INT_STAT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x5200082C"/>
      <edc:SFRDef ltx:memberofperipheral="EXTDMA" edc:cname="INT_STAT_CLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x52000830"/>
      <edc:SFRDef ltx:memberofperipheral="EXTDMA" edc:cname="CONFIG" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:impl="0x1F" edc:_addr="0x52000834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXTDMA">
            <edc:SFRFieldDef edc:cname="FETCHER_SCATTER_GATHER" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PUSHER_SCATTER_GATHER" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STOP_PUSHER" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STOP_FETCHER" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SOFTWARE_RESET" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EXTDMA" edc:cname="START" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:impl="0x3" edc:_addr="0x52000838">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXTDMA">
            <edc:SFRFieldDef edc:cname="START_FETCH" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="START_PUSH" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EXTDMA" edc:cname="STATUS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn----------nnn-nn" edc:impl="0xFFFF003B" edc:_addr="0x5200083C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXTDMA">
            <edc:SFRFieldDef edc:cname="FETCHER_BUSY" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PUSHER_BUSY" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BUSY_FLAG" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FETCHER_NOT_EMPTY" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PUSHER_WAITING_FIFO" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="BYTES_NUMBER" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3C0" edc:_addr="0x52000840"/>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="WDCOUNT" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x52000C00"/>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="WDRELOAD" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x52000C04"/>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="WDKICK" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x52000C08"/>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="WDCONTROL" edc:nzwidth="0x20" edc:access="-------------------------------n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0x52000C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:SFRFieldDef edc:cname="WDRSTEN" edc:nzwidth="0x1" edc:desc="WDRSTEN"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="WDSTATUS" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x52000C10"/>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="WDSTOP" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:_addr="0x52000C14"/>
      <edc:AdjustPoint edc:offset="0xBE8" edc:_addr="0x52000C18"/>
      <edc:SFRDef ltx:memberofperipheral="TIMERS" edc:cname="RST" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x52001800"/>
      <edc:SFRDef ltx:memberofperipheral="TIMERS" edc:cname="STOP" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x52001804"/>
      <edc:SFRDef ltx:memberofperipheral="TIMERS" edc:cname="INTEN" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x52001808"/>
      <edc:SFRDef ltx:memberofperipheral="TIMERS" edc:cname="INTDIS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x5200180C"/>
      <edc:SFRDef ltx:memberofperipheral="TIMERS" edc:cname="STAT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x52001810"/>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x52001814"/>
      <edc:SFRDef ltx:memberofperipheral="TIMERS" edc:cname="CNT0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x52001818"/>
      <edc:SFRDef ltx:memberofperipheral="TIMERS" edc:cname="MATCH0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x5200181C"/>
      <edc:SFRDef ltx:memberofperipheral="TIMERS" edc:cname="CNT1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x52001820"/>
      <edc:SFRDef ltx:memberofperipheral="TIMERS" edc:cname="MATCH1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x52001824"/>
      <edc:AdjustPoint edc:offset="0x3E4" edc:_addr="0x52001828"/>
      <edc:SFRDef ltx:memberofperipheral="SYSREGS" edc:cname="POWERCTRL" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:_addr="0x52001C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SYSREGS">
            <edc:SFRFieldDef edc:cname="STATE" edc:nzwidth="0x3" edc:desc="Power Control State">
              <edc:SFRFieldSemantic edc:cname="ESECBOOTDONE" edc:desc="ESecure Boot is Finished" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="POWERDOWN" edc:desc="ESecure is in Power-down" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="HOSTBOOTDONE" edc:desc="Host Boot is Finished" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="ESecure is Idle" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="BUSY" edc:desc="ESecure is Busy" edc:when="(field &amp; 0x7) == 0x5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:SFRDataSector>
    <edc:GPRDataSector edc:regionid="BATTREGS" edc:beginaddr="0x53800000" edc:endaddr="0x53800020" edc:isexecutable="true" edc:rw="rw"/>
    <edc:SFRDataSector edc:regionid="APBB" edc:beginaddr="0x54000000" edc:endaddr="0x59000438" edc:rw="rw">
      <edc:AdjustPoint edc:offset="0x3000000" edc:_addr="0x54000000"/>
      <edc:SFRDef ltx:memberofperipheral="CSM" edc:cname="CSMCTRLA" edc:nzwidth="0x20" edc:access="----------------------------nn--" edc:por="00000000000000000000001100000000" edc:mclr="00000000000000000000001100000000" edc:impl="0xC" edc:_addr="0x57000000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CSM">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SECURED" edc:nzwidth="0x1" edc:desc="Secured bit"/>
            <edc:SFRFieldDef edc:cname="RTCCLK" edc:nzwidth="0x1" edc:desc="RTC Clock Enable bit"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CSM" edc:cname="CSMCTRLB" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x57000004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CSM">
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Error Interrupt Request bit."/>
            <edc:SFRFieldDef edc:cname="TAMPER" edc:nzwidth="0x1" edc:desc="Tamper Interrupt Request bit."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CSM" edc:cname="CSMINTENCLR" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0x57000008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CSM">
            <edc:SFRFieldDef edc:cname="CANCEL" edc:nzwidth="0x1" edc:desc="Cancel Command Interrupt Enable bit"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CSM" edc:cname="CSMINTENSET" edc:nzwidth="0x20" edc:access="-------------------------------n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0x5700000C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CSM">
            <edc:SFRFieldDef edc:cname="CANCEL" edc:nzwidth="0x1" edc:desc="Cancel Command Interrupt Enable bit"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CSM" edc:cname="CSMINTFLAG" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0x57000010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CSM">
            <edc:SFRFieldDef edc:cname="CANCEL" edc:nzwidth="0x1" edc:desc="Cancel Command Interrupt Flag bit"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CSM" edc:cname="CSMSTATUS" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0x57000014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CSM">
            <edc:SFRFieldDef edc:cname="OTPLOCK" edc:nzwidth="0x1" edc:desc="OTP Lock bit"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CSM" edc:cname="CSMREPORT" edc:nzwidth="0x20" edc:access="------------nnnn-nnn-nnn-nnn---n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF7771" edc:_addr="0x57000018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CSM">
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="HSM CPU Busy"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PS" edc:nzwidth="0x3" edc:desc="Processing State bits"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LCS" edc:nzwidth="0x3" edc:desc="Lifecycle State bits"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SBS" edc:nzwidth="0x3" edc:desc="Secure Boot State bits"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ECODE" edc:nzwidth="0x4" edc:desc="Error Code"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xE4" edc:_addr="0x5700001C"/>
      <edc:SFRDef ltx:memberofperipheral="AI" edc:cname="AIOFFSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x57000100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AI">
            <edc:SFRFieldDef edc:cname="OFFSET" edc:nzwidth="0x20" edc:desc="Address Offset"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AI" edc:cname="AIATTR" edc:nzwidth="0x20" edc:access="-------------------------------n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0x57000104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AI">
            <edc:SFRFieldDef edc:cname="NSM" edc:nzwidth="0x1" edc:desc="Non Secure Master"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xF8" edc:_addr="0x57000108"/>
      <edc:SFRDef ltx:memberofperipheral="PKRAM" edc:cname="PKRPCTRL" edc:nzwidth="0x20" edc:access="-----------------nnnnnnn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F03" edc:_addr="0x57000200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PKRAM">
            <edc:SFRFieldDef edc:cname="PARITY" edc:nzwidth="0x1" edc:desc="RAM Parity Enable bit (1)"/>
            <edc:SFRFieldDef edc:cname="FLTEN" edc:nzwidth="0x1" edc:desc="Fault Injection Enable bit"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="FLTPTR" edc:nzwidth="0x7" edc:desc="Fault Injection Bit Pointer bit"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PKRAM" edc:cname="PKRPERROR" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0x57000204">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PKRAM">
            <edc:SFRFieldDef edc:cname="PARITY" edc:nzwidth="0x1" edc:desc="PK RAM Parity Error bit"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xF8" edc:_addr="0x57000208"/>
      <edc:SFRDef ltx:memberofperipheral="MCRAMC" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x3" edc:_addr="0x57000300">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCRAMC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="No effect." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Reset the MCRAMC. A software-triggered hardware reset of the MCRAMC user interface is performed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="ECC Decoder Enable">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="ECC decoding is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="ECC decoding is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCRAMC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:_addr="0x57000304">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCRAMC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software reset busy bit"/>
            <edc:SFRFieldDef edc:cname="FLTEN" edc:nzwidth="0x1" edc:desc="Fault Injection Enabled busy bit"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="ECC Decoder Enable busy bit"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCRAMC" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x57000308">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCRAMC">
            <edc:SFRFieldDef edc:cname="SERREN" edc:nzwidth="0x1" edc:desc="Single Bit Error Interrupt Enable, Clear"/>
            <edc:SFRFieldDef edc:cname="DERREN" edc:nzwidth="0x1" edc:desc="Double Bit Error Interrupt Enable, Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCRAMC" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x5700030C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCRAMC">
            <edc:SFRFieldDef edc:cname="SERREN" edc:nzwidth="0x1" edc:desc="Single Bit Error Interrupt Enable, Set"/>
            <edc:SFRFieldDef edc:cname="DERREN" edc:nzwidth="0x1" edc:desc="Double Bit Error Interrupt Enable, Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCRAMC" edc:cname="INTSTA" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x57000310">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCRAMC">
            <edc:SFRFieldDef edc:cname="SERR" edc:nzwidth="0x1" edc:desc="Single Bit Error"/>
            <edc:SFRFieldDef edc:cname="DERR" edc:nzwidth="0x1" edc:desc="Double Bit Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCRAMC" edc:cname="FLTCTRL" edc:nzwidth="0x20" edc:access="------------------nn----------n-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3002" edc:_addr="0x57000314">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCRAMC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FLTEN" edc:nzwidth="0x1" edc:desc="Fault Injection Enabled">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="Disables fault injection." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Enables fault injection at FLTADR address offset as selected by FLTMD and FLTxPTR." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="FLTMD" edc:nzwidth="0x2" edc:desc="Fault Injection Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCRAMC" edc:cname="FLTPTR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:_addr="0x57000318">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCRAMC">
            <edc:SFRFieldDef edc:cname="FLT1PTR" edc:nzwidth="0x8" edc:desc="Single Fault Injection Bit Pointer"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="FLT2PTR" edc:nzwidth="0x8" edc:desc="Double Fault Injection Bit Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCRAMC" edc:cname="FLTADR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x5700031C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCRAMC">
            <edc:SFRFieldDef edc:cname="FLTADR" edc:nzwidth="0x18" edc:desc="Fault Address Offset"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCRAMC" edc:cname="ERRCADR" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x57000320">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCRAMC">
            <edc:SFRFieldDef edc:cname="ERCADR" edc:nzwidth="0x18" edc:desc="ECC SECDED Error Capture Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCRAMC" edc:cname="ERRCPAR" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x57000324">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCRAMC">
            <edc:SFRFieldDef edc:cname="ERCPAR" edc:nzwidth="0x8" edc:desc="ECC SECDED Error Capture Parity"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCRAMC" edc:cname="ERRCSYN" edc:nzwidth="0x20" edc:access="----------------rr------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC0FF" edc:_addr="0x57000328">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCRAMC">
            <edc:SFRFieldDef edc:cname="ERCSYN" edc:nzwidth="0x8" edc:desc="ECC SECDED Error Capture Syndrome">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="Not a Single bit error." edc:when="(field &amp; 0xFF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Single bit error." edc:when="(field &amp; 0xFF) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="ERR1" edc:nzwidth="0x1" edc:desc="ECC Single Bit Error"/>
            <edc:SFRFieldDef edc:cname="ERR2" edc:nzwidth="0x1" edc:desc="ECC Double Bit Error">
              <edc:SFRFieldSemantic edc:cname="0" edc:desc="Not a Double bit error." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Double bit error." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1FFFCD4" edc:_addr="0x5700032C"/>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CNTL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnn-----------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFE0000" edc:_addr="0x59000000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:AdjustPoint edc:offset="0x11"/>
            <edc:SFRFieldDef edc:cname="CNTL" edc:nzwidth="0xF" edc:desc="RTC Lower Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CNTH" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x59000004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="CNTH" edc:nzwidth="0x20" edc:desc="RTC Upper Counter Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="MATCHL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnn-----------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFE0000" edc:_addr="0x59000008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:AdjustPoint edc:offset="0x11"/>
            <edc:SFRFieldDef edc:cname="MATCHL" edc:nzwidth="0xF" edc:desc="RTC Match Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="MATCHH" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x5900000C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="MATCHH" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRL" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x59000010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="ENI" edc:nzwidth="0x1" edc:desc="ENI"/>
            <edc:SFRFieldDef edc:cname="ENB" edc:nzwidth="0x1" edc:desc="ENB"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="STAT" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0x59000014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="STAT" edc:nzwidth="0x1" edc:desc="Raw match status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3E8" edc:_addr="0x59000018"/>
      <edc:SFRDef ltx:memberofperipheral="TAMPER" edc:cname="LEVELA" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00010001000100010001000100010101" edc:mclr="00010001000100010001000100010101" edc:_addr="0x59000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TAMPER">
            <edc:SFRFieldDef edc:cname="LEVEL0" edc:nzwidth="0x4" edc:desc="Level 0">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL1" edc:nzwidth="0x4" edc:desc="Level 1">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL2" edc:nzwidth="0x4" edc:desc="Level 2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL3" edc:nzwidth="0x4" edc:desc="Level 3">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL4" edc:nzwidth="0x4" edc:desc="Level 4">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL5" edc:nzwidth="0x4" edc:desc="Level 5">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL6" edc:nzwidth="0x4" edc:desc="Level 6">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL7" edc:nzwidth="0x4" edc:desc="Level 7">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TAMPER" edc:cname="LEVELB" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00010001000100010001000100010001" edc:mclr="00010001000100010001000100010001" edc:_addr="0x59000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TAMPER">
            <edc:SFRFieldDef edc:cname="LEVEL8" edc:nzwidth="0x4" edc:desc="Level 8">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL9" edc:nzwidth="0x4" edc:desc="Level 9">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL10" edc:nzwidth="0x4" edc:desc="Level 10">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL11" edc:nzwidth="0x4" edc:desc="Level 11">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL12" edc:nzwidth="0x4" edc:desc="Level 12">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL13" edc:nzwidth="0x4" edc:desc="Level 13">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL14" edc:nzwidth="0x4" edc:desc="Level 14">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL15" edc:nzwidth="0x4" edc:desc="Level 15">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TAMPER" edc:cname="LEVELC" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00010001000100010001000100010001" edc:mclr="00010001000100010001000100010001" edc:_addr="0x59000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TAMPER">
            <edc:SFRFieldDef edc:cname="LEVEL16" edc:nzwidth="0x4" edc:desc="Level 16">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL17" edc:nzwidth="0x4" edc:desc="Level 17">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL18" edc:nzwidth="0x4" edc:desc="Level 18">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL19" edc:nzwidth="0x4" edc:desc="Level 19">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL20" edc:nzwidth="0x4" edc:desc="Level 20">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL21" edc:nzwidth="0x4" edc:desc="Level 21">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL22" edc:nzwidth="0x4" edc:desc="Level 22">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL23" edc:nzwidth="0x4" edc:desc="Level 23">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TAMPER" edc:cname="LEVELD" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00010001000100010001000100010001" edc:mclr="00010001000100010001000100010001" edc:_addr="0x5900040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TAMPER">
            <edc:SFRFieldDef edc:cname="LEVEL24" edc:nzwidth="0x4" edc:desc="Level 24">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL25" edc:nzwidth="0x4" edc:desc="Level 25">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL26" edc:nzwidth="0x4" edc:desc="Level 26">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL27" edc:nzwidth="0x4" edc:desc="Level 27">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL28" edc:nzwidth="0x4" edc:desc="Level 28">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL29" edc:nzwidth="0x4" edc:desc="Level 29">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL30" edc:nzwidth="0x4" edc:desc="Level 30">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL31" edc:nzwidth="0x4" edc:desc="Level 31">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOSTIRQ" edc:desc="Host Interrupt" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LEHIRQ" edc:desc="Log Event and Host Interrupt" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SAFEMODE" edc:desc="Enter Safe Mode" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ERSTKEY" edc:desc="Erase Tamper Key" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ERSFKEY" edc:desc="Erase Flash Key" edc:when="(field &amp; 0xF) == 0x6"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TAMPER" edc:cname="SETLEVEL" edc:nzwidth="0x20" edc:access="wwwwwwwwwwwwwwww---wwwww-----www" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF1F07" edc:_addr="0x59000410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TAMPER">
            <edc:SFRFieldDef edc:cname="TamperLevel" edc:nzwidth="0x3" edc:desc="Tamper Level"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="TamperID" edc:nzwidth="0x5" edc:desc="Tamper ID"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ProtectionKey" edc:nzwidth="0x10" edc:desc="Protection Key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TAMPER" edc:cname="FILTERCFG" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn---nnnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF1F07" edc:_addr="0x59000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TAMPER">
            <edc:SFRFieldDef edc:cname="Threshold" edc:nzwidth="0x3" edc:desc="Filter Threshold"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="Period" edc:nzwidth="0x5" edc:desc="Filter Period"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ProtectionKey" edc:nzwidth="0x10" edc:desc="Filter Protection Key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TAMPER" edc:cname="SOFTTAMP" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn---nnnnn-------n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF1F01" edc:_addr="0x59000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TAMPER">
            <edc:SFRFieldDef edc:cname="TamperActive" edc:nzwidth="0x1" edc:desc="Tamper Active"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TamperID" edc:nzwidth="0x5" edc:desc="Tamper ID"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ProtectionKey" edc:nzwidth="0x10" edc:desc="Protection Key"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TAMPER" edc:cname="RAWSTAT" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x5900041C"/>
      <edc:SFRDef ltx:memberofperipheral="TAMPER" edc:cname="STAT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000001" edc:mclr="00000000000000000000000000000001" edc:_addr="0x59000420"/>
      <edc:SFRDef ltx:memberofperipheral="TAMPER" edc:cname="TIMESTAMP" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x59000424"/>
      <edc:SFRDef ltx:memberofperipheral="TAMPER" edc:cname="FILTERCNT" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x59000428"/>
      <edc:SFRDef ltx:memberofperipheral="TAMPER" edc:cname="SOFTINFO" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x5900042C"/>
      <edc:SFRDef ltx:memberofperipheral="TAMPER" edc:cname="HOSTIRQ" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x59000430"/>
      <edc:SFRDef ltx:memberofperipheral="TAMPER" edc:cname="SOFTRESET" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x59000434"/>
    </edc:SFRDataSector>
    <edc:ExternalSector edc:regionid="AUX_INTF" edc:beginaddr="0x60000000" edc:endaddr="0x70000000" edc:isexecutable="true" edc:rw="rw" edc:type="ram"/>
    <edc:SFRDataSector edc:regionid="PPB" edc:beginaddr="0xE0000000" edc:endaddr="0xE000ED34" edc:rw="rw">
      <edc:AdjustPoint edc:offset="0xE004" edc:_addr="0xE0000000"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="ICTR" edc:impl="0xF" edc:access="----------------------------rrrr" edc:por="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Interrupt Controller Type Register" edc:_addr="0xE000E004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0">
            <edc:SFRFieldDef edc:nzwidth="0x4" edc:cname="INTLINESNUM" edc:desc="Number of interrupt lines supported by NVIC in granularities of 32."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0xE000E008"/>
      <edc:SFRDef ltx:memberofperipheral="SysTick" edc:cname="CSR" edc:nzwidth="0x20" edc:access="---------------n-------------nnn" edc:por="00000000000000000000000000000100" edc:mclr="00000000000000000000000000000100" edc:impl="0x10007" edc:_addr="0xE000E010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SysTick Counter Enable">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Counter disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Counter enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TICKINT" edc:nzwidth="0x1" edc:desc="SysTick Exception Request Enable">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Counting down to 0 does not assert the SysTick exception request" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Counting down to 0 asserts the SysTick exception request" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKSOURCE" edc:nzwidth="0x1" edc:desc="Clock Source 0=external, 1=processor">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="External clock" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Processor clock" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="COUNTFLAG" edc:nzwidth="0x1" edc:desc="Timer counted to 0 since last read of register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SysTick" edc:cname="RVR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0xE000E014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:SFRFieldDef edc:cname="RELOAD" edc:nzwidth="0x18" edc:desc="Value to load into the SysTick Current Value Register when the counter reaches 0"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SysTick" edc:cname="CVR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0xE000E018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:SFRFieldDef edc:cname="CURRENT" edc:nzwidth="0x18" edc:desc="Current value at the time the register is accessed"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SysTick" edc:cname="CALIB" edc:nzwidth="0x20" edc:access="rr------rrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC0FFFFFF" edc:_addr="0xE000E01C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:SFRFieldDef edc:cname="TENMS" edc:nzwidth="0x18" edc:desc="Reload value to use for 10ms timing"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="SKEW" edc:nzwidth="0x1" edc:desc="TENMS is rounded from non-integer ratio">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="10ms calibration value is exact" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="10ms calibration value is inexact, because of the clock frequency" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NOREF" edc:nzwidth="0x1" edc:desc="No Separate Reference Clock">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="The reference clock is provided" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="The reference clock is not provided" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xE0" edc:_addr="0xE000E020"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="ISER" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:_addr="0xE000E100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETENA" edc:nzwidth="0x3" edc:desc="Interrupt set enable bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x7C" edc:_addr="0xE000E104"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="ICER" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:_addr="0xE000E180">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRENA" edc:nzwidth="0x3" edc:desc="Interrupt clear-enable bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x7C" edc:_addr="0xE000E184"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="ISPR" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:_addr="0xE000E200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETPEND" edc:nzwidth="0x3" edc:desc="Interrupt set-pending bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x7C" edc:_addr="0xE000E204"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="ICPR" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:_addr="0xE000E280">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRPEND" edc:nzwidth="0x3" edc:desc="Interrupt clear-pending bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x17C" edc:_addr="0xE000E284"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IPR" edc:nzwidth="0x20" edc:access="------nn------nn------nn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3030303" edc:_addr="0xE000E400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI1" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI2" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI3" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8FC" edc:_addr="0xE000E404"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="CPUID" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="01000001000011001100011000000001" edc:mclr="01000001000011001100011000000001" edc:_addr="0xE000ED00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:SFRFieldDef edc:cname="REVISION" edc:nzwidth="0x4" edc:desc="Minor revision number"/>
            <edc:SFRFieldDef edc:cname="PARTNO" edc:nzwidth="0xC" edc:desc="Processor Part Number, 0xC60=Cortex-M0+"/>
            <edc:SFRFieldDef edc:cname="ARCHITECTURE" edc:nzwidth="0x4" edc:desc="Processor Architecture, 0xC=ARMv6-M"/>
            <edc:SFRFieldDef edc:cname="VARIANT" edc:nzwidth="0x4" edc:desc="Major revision number"/>
            <edc:SFRFieldDef edc:cname="IMPLEMENTER" edc:nzwidth="0x8" edc:desc="Implementer code, ARM=0x41"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="ICSR" edc:nzwidth="0x20" edc:access="n--nnnn-nn-nnnnnnnnn---nnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x9EDFF1FF" edc:_addr="0xE000ED04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:SFRFieldDef edc:cname="VECTACTIVE" edc:nzwidth="0x9" edc:desc="Debug: Exception number of currently executing exception, or 0 if thread mode"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="VECTPENDING" edc:nzwidth="0x9" edc:desc="Exception number of the highest priority pending enabled exception"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ISRPENDING" edc:nzwidth="0x1" edc:desc="Debug: NVIC interrupt pending"/>
            <edc:SFRFieldDef edc:cname="ISRPREEMPT" edc:nzwidth="0x1" edc:desc="Debug: Pending exception serviced on exit from debug halt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PENDSTCLR" edc:nzwidth="0x1" edc:desc="SysTick exception clear-pending bit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="No effect" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Removes the pending state from the SysTick exception" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PENDSTSET" edc:nzwidth="0x1" edc:desc="SysTick exception set-pending bit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Write: no effect; read: SysTick exception is not pending" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Write: changes SysTick exception state to pending; read: SysTick exception is pending" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PENDSVCLR" edc:nzwidth="0x1" edc:desc="PendSV clear-pending bit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="No effect" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Removes the pending state from the PendSV exception" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PENDSVSET" edc:nzwidth="0x1" edc:desc="PendSV set-pending bit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Write: no effect; read: PendSV exception is not pending" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Write: changes PendSV exception state to pending; read: PendSV exception is pending" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NMIPENDSET" edc:nzwidth="0x1" edc:desc="NMI set-pending bit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Write: no effect; read: NMI exception is not pending" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Write: changes NMI exception state to pending; read: NMI exception is pending" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="VTOR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnn-------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF80" edc:_addr="0xE000ED08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TBLOFF" edc:nzwidth="0x19" edc:desc="Vector table base offset"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="AIRCR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnn------------nn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF8006" edc:_addr="0xE000ED0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VECTCLRACTIVE" edc:nzwidth="0x1" edc:desc="Debug: Clear state information"/>
            <edc:SFRFieldDef edc:cname="SYSRESETREQ" edc:nzwidth="0x1" edc:desc="System Reset Request">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="No system reset request" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Asserts a signal to the outer system that requests a reset" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="ENDIANNESS" edc:nzwidth="0x1" edc:desc="Data Endianness, 0=little, 1=big">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Little-endian" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Big-endian" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="VECTKEY" edc:nzwidth="0x10" edc:desc="Register key (0x05FA)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="SCR" edc:nzwidth="0x20" edc:access="---------------------------n-nn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x16" edc:_addr="0xE000ED10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SLEEPONEXIT" edc:nzwidth="0x1" edc:desc="Sleep-On-Exit when exiting Handler mode">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="O not sleep when returning to Thread mode" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Enter sleep, or deep sleep, on return from an ISR" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEEPDEEP" edc:nzwidth="0x1" edc:desc="Uses Deep Sleep as low power mode">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Sleep" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Deep sleep" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEVONPEND" edc:nzwidth="0x1" edc:desc="Send Event on Pending bit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Only enabled interrupts or events can wakeup the processor, disabled interrupts are excluded" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Enabled events and all interrupts, including disabled interrupts, can wakeup the processor" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="CCR" edc:nzwidth="0x20" edc:access="----------------------r-----r---" edc:por="00000000000000000000001000000100" edc:mclr="00000000000000000000001000000100" edc:impl="0x208" edc:_addr="0xE000ED14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="UNALIGN_TRP" edc:nzwidth="0x1" edc:desc="Unaligned accesses generates a Hard Fault">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Do not trap unaligned halfword and word accesses" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Trap unaligned halfword and word accesses" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="STKALIGN" edc:nzwidth="0x1" edc:desc="Stack 8-byte aligned on exception entry">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="4-byte aligned" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="8-byte aligned" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE000ED18"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="SHPR2" edc:nzwidth="0x20" edc:access="nnnnnnnn------------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF000000" edc:_addr="0xE000ED1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0x18"/>
            <edc:SFRFieldDef edc:cname="PRI_11" edc:nzwidth="0x8" edc:desc="Priority of system handler 11, SVCall"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="SHPR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn----------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF0000" edc:_addr="0xE000ED20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="PRI_14" edc:nzwidth="0x8" edc:desc="Priority of system handler 14, PendSV"/>
            <edc:SFRFieldDef edc:cname="PRI_15" edc:nzwidth="0x8" edc:desc="Priority of system handler 15, SysTick exception"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="SHCSR" edc:nzwidth="0x20" edc:access="----------------n---------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x8000" edc:_addr="0xE000ED24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0xF"/>
            <edc:SFRFieldDef edc:cname="SVCALLPENDED" edc:nzwidth="0x1" edc:desc="no description available"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0xE000ED28"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="DFSR" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0xE000ED30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:SFRFieldDef edc:cname="HALTED" edc:nzwidth="0x1" edc:desc="Halt request debug event active"/>
            <edc:SFRFieldDef edc:cname="BKPT" edc:nzwidth="0x1" edc:desc="Breakpoint debug event"/>
            <edc:SFRFieldDef edc:cname="DWTTRAP" edc:nzwidth="0x1" edc:desc="DWT debug event"/>
            <edc:SFRFieldDef edc:cname="VCATCH" edc:nzwidth="0x1" edc:desc="Vector catch debug event"/>
            <edc:SFRFieldDef edc:cname="EXTERNAL" edc:nzwidth="0x1" edc:desc="EDBGRQ debug event"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:SFRDataSector>
    <edc:EmulatorSector edc:beginaddr="0xE0001000" edc:endaddr="0xE000F000" edc:regionid="emulation"/>
  </edc:PhysicalSpace>
</edc:PIC>
